<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <!--  =============================================  -->
    <!--  ================== Get Rates ================  -->
    <!--  =============================================  -->
    <service verb="request" noun="ShippingRates">
        <out-parameters>
            <parameter name="responseMap"/>
            <parameter name="requestMap"/>
            <parameter name="errMsg"/>
        </out-parameters>
        <implements service="mantle.shipment.CarrierServices.get#ShippingRate"/>
        <actions>

            <!-- ~~~~~~~~~~~~~ Authorization ~~~~~~~~~~~~~ -->

            <entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayOption" value-field="apiTokenOpt">
                <field-map field-name="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="SgoApiToken"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayOption" value-field="contractIdOpt">
                <field-map field-name="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="SgoContractId"/>
            </entity-find-one>
            <entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayOption" value-field="customerNumberOpt">
                <field-map field-name="shippingGatewayConfigId"/>
                <field-map field-name="optionEnumId" value="SgoCustomerNumber"/>
            </entity-find-one>

            <set field="apiToken" from="apiTokenOpt?.optionValue" type="String"/>
            <set field="contractId" from="contractIdOpt?.optionValue" type="String"/>
            <set field="customerNumber" from="customerNumberOpt?.optionValue" type="String"/>
            <if condition="!apiToken &amp;&amp; !contractId &amp;&amp; !customerNumber">
                <return error="true" message="Shipping gateway ${shippingGatewayConfigId} has no Authorization, not requesting Shipping rates"/></if>
            <if condition="!contractId &amp;&amp; !customerNumber">
                <log level="warn" message="Shipping gateway ${shippingGatewayConfigId} has no Customer Number or Contract ID, not requesting Shipping rates"/></if>

            <!-- ~~~~~~~~~~~~~ shipment:routeSegment ~~~~~~~~~~~~~ -->

            <entity-find-one entity-name="mantle.shipment.Shipment" value-field="shipment" for-update="true"/>
            <if condition="shipment == null">
                <return error="true" message="Shipment not found with ID ${shipmentId}"/></if>
            <entity-find-one entity-name="mantle.shipment.ShipmentRouteSegment" value-field="routeSegment"/>
            <if condition="routeSegment == null">
                <return error="true" message="Shipment Route Segment not found with ID ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>
            <if condition="!shipment.fromPartyId">
                <return error="true" message="From party not set on shipment ${shipmentId}"/></if>
            <if condition="!shipment.toPartyId">
                <return error="true" message="To party not set on shipment ${shipmentId}"/></if>
            <if condition="!routeSegment.carrierPartyId || routeSegment.carrierPartyId == '_NA_'">
                <return error="true" message="Carrier not set on shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>
            <set field="shipmentMethodEnumId" from="shipmentMethodEnumId ?: routeSegment.shipmentMethodEnumId"/>
            <if condition="!shipmentMethodEnumId">
                <return error="true" message="Shipment method not set on shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>

            <!-- ~~~~~~~~~~~~~ Address From ~~~~~~~~~~~~~~~~ -->

            <if condition="!routeSegment.originPostalContactMechId &amp;&amp; routeSegment.originFacilityId">
                <service-call name="mantle.facility.ContactServices.get#FacilityDefaultShipOrigin" out-map="facOriginOut" in-map="[facilityId:routeSegment.originFacilityId]"/>
                <if condition="facOriginOut.postalContactMechId">
                    <set field="originPostalContactMechId" from="facOriginOut.postalContactMechId"/>
                    <set field="routeSegment.originPostalContactMechId" from="originPostalContactMechId"/>
                    <entity-update value-field="routeSegment"/></if></if>

            <if condition="!routeSegment.originPostalContactMechId">
                <return error="true" message="originPostalContactMechId not set on shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/><return/></if>
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="originPostalAddress">
                <field-map field-name="contactMechId" from="routeSegment.originPostalContactMechId"/></entity-find-one>
            <if condition="!originPostalAddress">
                <return error="true" message="Origin Postal Address is not found for shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>
            <set field="originPostalCode" from="originPostalAddress.postalCode" type="String"/>
            <if condition="!originPostalCode">
                <return error="true" message="Origin Postal code is not found for ContactMechId: ${routeSegment.originPostalContactMechId}"/></if>

            <!-- ~~~~~~~~~~~~~ Address To ~~~~~~~~~~~~~~~~ -->

            <if condition="!routeSegment.destPostalContactMechId">
                <return error="true" message="destPostalContactMechId not set on shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>
            <entity-find-one entity-name="mantle.party.contact.PostalAddress" value-field="destPostalAddress">
                <field-map field-name="contactMechId" from="routeSegment.destPostalContactMechId"/></entity-find-one>
            <if condition="!destPostalAddress">
                <return error="true" message="Destination Postal Address is not found for shipment ${shipmentId}:${shipmentRouteSegmentSeqId}"/></if>
            <set field="destPostalCode" from="destPostalAddress.postalCode" type="String"/>
            <if condition="!destPostalCode">
                <return error="true" message="Destination Postal code is not found for ContactMechId: ${routeSegment.destPostalContactMechId}"/></if>

            <!-- ~~~~~~~~~~~~~ Shipment Package ~~~~~~~~~~~~~ -->

            <entity-find-one entity-name="mantle.shipment.ShipmentPackage" value-field="shipmentPackage">
                <field-map field-name="shipmentId"/>
                <field-map field-name="shipmentPackageSeqId"/></entity-find-one>
            <if condition="!shipmentPackage">
                <return error="true" message="Any package not set on shipment ${shipmentId}:${shipmentPackageSeqId}"/></if>
            <if condition="!shipmentPackage.weightUomId">
                <return error="true" message="Weight or WeightUomId not set for Shipment Package ${shipmentId}:${shipmentPackageSeqId}"/></if>
            <set field="weight" from="shipmentPackage.weight"/>
            <if condition="shipmentPackage.weightUomId != 'WT_kg'">
                <entity-find-one entity-name="moqui.basic.UomConversion" value-field="conversion">
                    <field-map field-name="toUomId" from="shipmentPackage.weightUomId"/>
                    <field-map field-name="uomId" value="WT_kg"/>
                </entity-find-one>
                <log level="warn" message="=++++++++++${conversion}+++++++++++===================="/>
                <set field="weight" from="shipmentPackage.weight/conversion.conversionFactor" type="Integer"/></if>

            <!-- ~~~~~~~~~~~~~ Service Code ~~~~~~~~~~~~~~~~ -->

            <entity-find-one entity-name="mantle.shipment.carrier.ShippingGatewayMethod" value-field="gatewayMethod">
                <field-map field-name="shippingGatewayConfigId"/>
                <field-map field-name="carrierPartyId" from="routeSegment.carrierPartyId"/>
            </entity-find-one>
            <set field="serviceCode"/>
            <if condition="!gatewayMethod.gatewayServiceCode">
                <then>
                    <return error="true" message="Gateway method ${shipmentMethodEnumId} not set on for ${shippingGatewayConfigId}"/>
                </then>
                <else>
                    <set field="serviceCode" from="gatewayMethod.gatewayServiceCode"/>
                </else>
            </if>

            <set field="requestMap" type="Map" from="[customerNumber:customerNumber,contractId:contractId,weight:weight,serviceCode:serviceCode,originPostalCode:originPostalCode,destPostalCode:destPostalCode]"/>
            <script>
                <![CDATA[
                    StringWriter sw =  new StringWriter();
                    ec.resourceFacade.ftlTemplateRenderer.render("component://mantle-canadapost/template/GetRates.xml.ftl", sw)
                    //ec.logger.info("========================"+sw.toString())
                    org.moqui.util.RestClient restClient = ec.service.rest().method(org.moqui.util.RestClient.POST)
                    restClient.contentType("application/vnd.cpc.ship.rate-v4+xml")
                    restClient.addHeader("Authorization", "Basic ${apiToken}")
                    restClient.text(sw.toString())
                    //ec.logger.info(restClient.getBodyText())
                    restClient.uri("https://ct.soa-gw.canadapost.ca/rs/ship/price")
                    //ec.logger.info("++++++++"+restClient.getUri())
                    org.moqui.util.RestClient.RestResponse restResponse = restClient.call()
                    if (restResponse.statusCode < 200 || restResponse.statusCode >= 300) {
                        errMsg = restResponse.text()
                        return
                    }
                    responseMap = restResponse.text()
                ]]>
            </script>

        </actions>
    </service>

</services>